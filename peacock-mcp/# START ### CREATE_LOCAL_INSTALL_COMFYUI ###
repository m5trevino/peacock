# START ### CREATE_LOCAL_INSTALL_COMFYUI ###
# Create the local directory if it doesn't exist
mkdir -p /home/flintx/runpod1

# Create the install_comfyui.sh script
cat << 'EOF' > /home/flintx/runpod1/install_comfyui.sh
#!/bin/bash

# ##############################################################################
# #  ComfyUI & AnimateDiff-Evolved Installer for runpod1 - Street Certified   #
# ##############################################################################
# Yo, this script gonna get ComfyUI and AnimateDiff set up on your runpod1, big dawg.
# Run this from /workspace, make sure your runpod1 instance got that GPU muscle.

# --- Configuration ---
COMFYUI_DIR="/workspace/ComfyUI"
PYTHON_VERSION="python3.10" # Common on runpod1s, adjust if your pod uses 3.11 etc.

# --- Helper: Check command status ---
check_status() {
  if [ \$? -eq 0 ]; then
    echo "[+] \$1... 4sho, that's locked in, G."
  else
    echo "[!] YO, HOLD UP! \$1... FAILED. Peep the errors, fucker. Script's out." >&2 # Send to stderr
    exit 1
  fi
}

echo "======================================================"
echo "  Starting ComfyUI & AnimateDiff Setup on runpod1"
echo "  Target Dir: ${COMFYUI_DIR}"
echo "======================================================"

# --- Prerequisites ---
echo ""
echo ">>> STEP 1: Gettin' the system dependencies straight..."
apt-get update -y
# Use explicit package names for clarity with apt-get
apt-get install -y git python3.10 python3.10-venv libgl1 libglib2.0-0 wget
check_status "System dependencies (git, python, venv, libs, wget)"

# --- Clone ComfyUI ---
echo ""
echo ">>> STEP 2: Grabbin' ComfyUI, the main visual artillery..."
if [ -d "$COMFYUI_DIR" ]; then
  echo "[*] ComfyUI directory already exists at ${COMFYUI_DIR}. Skippin' clone, playa. Pullin' latest..."
  cd "$COMFYUI_DIR" || check_status "cd to ${COMFYUI_DIR}" # Use || check_status for cd
  git pull
  check_status "Pulling latest ComfyUI"
else
  git clone https://github.com/comfyanonymous/ComfyUI.git "$COMFYUI_DIR"
  check_status "Cloning ComfyUI"
  cd "$COMFYUI_DIR" || check_status "cd to ${COMFYUI_DIR}"
fi

# --- Set up Python Virtual Environment ---
echo ""
echo ">>> STEP 3: Settin' up a clean room (venv) for ComfyUI..."
# Using a specific venv name like 'comfy_venv' to avoid conflicts if other apps use 'venv'
COMFYUI_VENV_DIR="${COMFYUI_DIR}/comfy_venv"
if [ -d "${COMFYUI_VENV_DIR}" ]; then
  echo "[*] Virtual environment '${COMFYUI_VENV_DIR}' already exists. Skippin' creation."
else
  # Use the explicit python version command to create the venv
  /usr/bin/${PYTHON_VERSION} -m venv "${COMFYUI_VENV_DIR}"
  check_status "Creating Python virtual environment at ${COMFYUI_VENV_DIR}"
fi

source "${COMFYUI_VENV_DIR}/bin/activate"
check_status "Activating virtual environment for ComfyUI"
echo "[*] Python interpreter in use: $(which python)"

# --- Install ComfyUI Dependencies ---
echo ""
echo ">>> STEP 4: Loadin' up ComfyUI's ammo (Python dependencies)..."
pip install --upgrade pip
check_status "Upgrading pip"

echo "[*] Installin' required PyTorch version with CUDA support..."
# IMPORTANT: Adjust --index-url based on your runpod1's CUDA version!
# Common: cu118 or cu121. If unsure, check runpod1 template or use the base image details.
# If this fails, you NEED to find the correct PyTorch install command for your specific runpod1 CUDA version.
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
check_status "PyTorch installation (ensure CUDA version matches your runpod1 - cu118 assumed)"

pip install -r "${COMFYUI_DIR}/requirements.txt"
check_status "Installing ComfyUI Python dependencies from requirements.txt"

# Install huggingface_hub needed for downloading models
pip install huggingface_hub
check_status "Installing huggingface_hub"

# --- Create Standard Model Directories ---
echo ""
echo ">>> STEP 5: Preppin' the stash spots for your models..."
mkdir -p "${COMFYUI_DIR}/models/checkpoints"
mkdir -p "${COMFYUI_DIR}/models/vae"
mkdir -p "${COMFYUI_DIR}/models/loras"
mkdir -p "${COMFYUI_DIR}/models/controlnet"
mkdir -p "${COMFYUI_DIR}/models/clip_vision"
mkdir -p "${COMFYUI_DIR}/models/gligen"
mkdir -p "${COMFYUI_DIR}/models/upscale_models"
mkdir -p "${COMFYUI_DIR}/custom_nodes" # Ensure custom_nodes dir exists
check_status "Creating standard ComfyUI model directories"

# --- Install AnimateDiff-Evolved Custom Node ---
ANIMATEDIFF_NODE_DIR="${COMFYUI_DIR}/custom_nodes/ComfyUI-AnimateDiff-Evolved"
echo ""
echo ">>> STEP 6: Grabbin' AnimateDiff-Evolved, the motion plug..."
if [ -d "$ANIMATEDIFF_NODE_DIR" ]; then
  echo "[*] AnimateDiff-Evolved directory already exists. Skippin' clone, my G. Pullin' latest..."
  cd "$ANIMATEDIFF_NODE_DIR" || check_status "cd to ${ANIMATEDIFF_NODE_DIR}"
  git pull
  check_status "Pulling latest AnimateDiff-Evolved"
  cd "$COMFYUI_DIR" || check_status "cd back to ${COMFYUI_DIR}" # Go back to ComfyUI base
else
  git clone https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved.git "$ANIMATEDIFF_NODE_DIR"
  check_status "Cloning AnimateDiff-Evolved"
  cd "$COMFYUI_DIR" || check_status "cd back to ${COMFYUI_DIR}"
fi

# --- Create AnimateDiff Model Directory (Official Recommended Spot) ---
# The node also looks in ./models/animatediff_models relative to ComfyUI root
ANIMATEDIFF_MODELS_DIR="${COMFYUI_DIR}/models/animatediff_models"
echo ""
echo ">>> STEP 7: Makin' space for AnimateDiff's motion packs (official spot)..."
mkdir -p "$ANIMATEDIFF_MODELS_DIR"
check_status "Creating AnimateDiff model directory (${ANIMATEDIFF_MODELS_DIR})"


# --- Download AnimateDiff Motion Models (The ones we pinpointed) ---
echo ""
echo ">>> STEP 8: Snaggin' the core AnimateDiff motion models (using hf-cli)..."
# We use the huggingface-cli tool with the exact filenames we found in the repo listing

echo "[*] Downloading mm_sd_v15_v2.ckpt..."
huggingface-cli download guoyww/animatediff mm_sd_v15_v2.ckpt --local-dir "${ANIMATEDIFF_MODELS_DIR}/" --local-dir-use-symlinks False
check_status "Downloading mm_sd_v15_v2.ckpt"

echo "[*] Downloading v3_sd15_mm.ckpt..."
huggingface-cli download guoyww/animatediff v3_sd15_mm.ckpt --local-dir "${ANIMATEDIFF_MODELS_DIR}/" --local-dir-use-symlinks False
check_status "Downloading v3_sd15_mm.ckpt"

echo "[*] You got the core AnimateDiff models now, my boy."
echo "[*] Peep ${ANIMATEDIFF_MODELS_DIR}/ to see 'em."
ls -lh "${ANIMATEDIFF_MODELS_DIR}/"


echo ""
echo "========================================================================"
echo "  ComfyUI & AnimateDiff Installation Complete!"
echo "========================================================================"
echo ""
echo "--- MANUAL STEPS STILL NEEDED, PLAYA ---"
echo ""
echo "1.  DOWNLOAD YOUR *OTHER* MODELS (Checkpoints, VAEs, etc.):"
echo "    ----------------------------------------------------------"
echo "    You still gotta get your base Stable Diffusion checkpoints (like SD1.5, SDXL) and VAEs."
echo "    Place checkpoints (.safetensors) in -> ${COMFYUI_DIR}/models/checkpoints/"
echo "    Place VAEs (.safetensors or .pt) in -> ${COMFYUI_DIR}/models/vae/"
echo "    Use 'huggingface-cli download' or another method you prefer."
echo ""
echo "    EXAMPLE hf-cli DOWNLOAD (uncomment and run these MANUALLY AFTER ACTIVATING VENV):"
echo '    # To run these examples, first activate the venv: source ${COMFYUI_VENV_DIR}/bin/activate'
echo '    # Checkpoint SD 1.5 (example repo/file):'
echo '    # huggingface-cli download runwayml/stable-diffusion-v1-5 v1-5-pruned-emaonly.safetensors --local-dir "${COMFYUI_DIR}/models/checkpoints/" --local-dir-use-symlinks False'
echo '    # Checkpoint SDXL Base 1.0:'
echo '    # huggingface-cli download stabilityai/stable-diffusion-xl-base-1.0 sd_xl_base_1.0.safetensors --local-dir "${COMFYUI_DIR}/models/checkpoints/" --local-dir-use-symlinks False'
echo '    # VAE for SD 1.5/SDXL:'
echo '    # huggingface-cli download stabilityai/sd-vae-ft-mse-original vae-ft-mse-840000-ema-pruned.safetensors --local-dir "${COMFYUI_DIR}/models/vae/" --local-dir-use-symlinks False'
echo ""
echo "2.  START COMFYUI:"
echo "    ------------------------"
echo "    To start ComfyUI, you need to activate its environment and run the main script."
echo "    The master installer script can create a helper script for this."
echo ""
echo "Script done. Run the master installer script for next steps and helper scripts."
echo "---"

# Note: Deactivation of the venv is handled by the master script or left to the user's shell
EOF
# FINISH ### CREATE_LOCAL_INSTALL_COMFYUI ###